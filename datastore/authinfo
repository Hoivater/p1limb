<h3 class="text-center">Подключение авторизации и регистрации на сайт</h3>
<p>
	В ваш routes неободимо прописать следующие пути:
</p>

<div class = "code_ex">
<pre>
elseif($route_arr[0] == "registration")
{
	$html = new Modules\Auth\AuthPage(false);
	$html -> Registration();				
}
elseif($route_arr[0] == "auth")
{
	$html = new Modules\Auth\AuthPage(false);
	$html -> Auth();				
}
$this -> html = $html -> page;
</pre>
</div>
<p>После этого станут доступны два новых адреса: /auth и /registration</p>
<p>Авторизация хранится в cookies в течении дня, если не включена галочка "запомнить". В таком случае будет храниться в cookies в течении месяца.</p>
<p>При записи создается пара значений в cookie - email и code, где code - это произвольно генерируемое значение для каждого пользователя - в сессии хранится закешировано в md5, а email - это email пользователя. При совпадении пользователь считается авторизированным.</p>

<p>Проверить авторизацию пользователя на странице: Control::IsAuth(); true - авторизирован, false - не авторизирован</p>
<p>Проверить получить права пользователя: Control::IsRules(); user - обычный пользователь, admin - администратор</p>

<p>Класс Route, private $auth. Если пользователь авторизирован, то в переменной содержится его статус - user, admin. Если нет - то false </p>
<h4>Ограничения на маршрут</h4>

<div class = "code_ex">
<pre>
if($route_arr[0] == "first" && $this -> auth !== false)
{
	$html = new LimbSite\FitrstPage();
}
</pre>
</div>
<h4>Права доступа в шаблоне</h4>
<p>По умолчанию в модуле авторизации предусмотрены пару типов разрешений, то есть user, admin. Где user - это любой зарегистрированный пользователь, а admin - соответсвтвенно администратор который имеет свой уровень.</p>
<div class = "code_ex">
<pre>
...Какой-то код который видят все

%startadmin%
...код который видит администратор
%endadmin%

...Какой-то код который видят все

%startuser%
... Код который видит авторизированный пользователь и администратор
%enduser%

...Какой-то код который видят все
</pre>
</div>
<p>Для замены в шаблоне специальных имен создать класс AuthAccess и воспользоваться методом getResult(): </p>
<div class = "code_ex">
<pre>
$auth = Base\Control\Control::IsRules();//возвращает admin, user иначе
#говоря, то что содержится напротив авторизированного пользователя в столбце <i>access_user.</i> 
$obj = new Auths\AuthAccess($html, $auth);
$result = $obj -> getResult();
</pre>
</div>